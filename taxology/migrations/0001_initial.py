# Generated by Django 4.1.6 on 2023-02-21 11:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import taxology.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "firstname_k",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="이름",
                    ),
                ),
                (
                    "lastname_k",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="성",
                    ),
                ),
                (
                    "firstname_e",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Firstname",
                    ),
                ),
                (
                    "lastname_e",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Lastname",
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="소속"
                    ),
                ),
                (
                    "abbreviation_e",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "abbreviation_k",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_primary", models.BooleanField(default=True)),
                (
                    "remarks",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="비고"
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20)),
                ("modified_on", models.DateTimeField(auto_now=True, null=True)),
                ("modified_by", models.CharField(blank=True, max_length=20)),
                (
                    "redirect_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="also_known_as",
                        to="taxology.author",
                    ),
                ),
            ],
            options={"ordering": ["abbreviation_k", "abbreviation_e"],},
        ),
        migrations.CreateModel(
            name="Journal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title_k", models.CharField(blank=True, max_length=500, null=True)),
                ("title_e", models.CharField(blank=True, max_length=500, null=True)),
                ("publisher", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "since",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="started year"
                    ),
                ),
                ("issn", models.CharField(blank=True, max_length=15, null=True)),
                ("created_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20)),
                ("modified_on", models.DateTimeField(auto_now=True, null=True)),
                ("modified_by", models.CharField(blank=True, max_length=20)),
            ],
            options={"ordering": ["title_k", "title_e"],},
        ),
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title_e",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="영문제목"
                    ),
                ),
                (
                    "title_k",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="한글제목"
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="발표년도"
                    ),
                ),
                (
                    "publish_date",
                    models.DateField(blank=True, null=True, verbose_name="출간연월일"),
                ),
                (
                    "volume",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="권"
                    ),
                ),
                (
                    "issue",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="호수"
                    ),
                ),
                (
                    "pages",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="페이지"
                    ),
                ),
                (
                    "journal_title",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="저널제목"
                    ),
                ),
                (
                    "author_list",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="저자"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BK", "Book"),
                            ("JN", "Journal Article"),
                            ("RP", "Report"),
                            ("TH", "Thesis"),
                        ],
                        default="JN",
                        max_length=2,
                        verbose_name="문헌종류",
                    ),
                ),
                (
                    "type2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("TX", "분류학(표본번호 있음)"),
                            ("T2", "분류학(표본번호 없음)"),
                            ("RV", "비분류학"),
                            ("OS", "해외화석"),
                        ],
                        default="TX",
                        max_length=2,
                        verbose_name="문헌종류",
                    ),
                ),
                (
                    "data",
                    models.FileField(
                        blank=True,
                        max_length=255,
                        upload_to=taxology.models.reference_upload_path,
                        verbose_name="파일",
                    ),
                ),
                (
                    "abstract",
                    models.TextField(blank=True, null=True, verbose_name="초록"),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("EN", "English"), ("KO", "Korean")],
                        default="EN",
                        max_length=2,
                        verbose_name="언어",
                    ),
                ),
                (
                    "doi",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="DOI"
                    ),
                ),
                (
                    "fossilgroup",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="화석종류"
                    ),
                ),
                (
                    "fossilgroup_choice",
                    models.CharField(
                        blank=True,
                        choices=[("MA", "거화석"), ("MI", "미화석"), ("IC", "생흔화석")],
                        max_length=20,
                        null=True,
                        verbose_name="화석종류",
                    ),
                ),
                (
                    "fossilgroup_macro",
                    models.BooleanField(default=False, verbose_name="거화석"),
                ),
                (
                    "fossilgroup_micro",
                    models.BooleanField(default=False, verbose_name="미화석"),
                ),
                (
                    "fossilgroup_ichno",
                    models.BooleanField(default=False, verbose_name="생흔화석"),
                ),
                (
                    "commonname",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="일반명"
                    ),
                ),
                (
                    "commonname_choice",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("삼엽충", "삼엽충(trilobite)"),
                            ("곤충", "곤충(insect)"),
                            ("개형충", "개형충(ostracod)"),
                            ("이매패류", "이매패류(bivalve)"),
                            ("복족류", "복족류(gastropod)"),
                            ("두족류", "두족류(cephalopod)"),
                            ("완족동물", "완족동물(brachiopod)"),
                            ("해백합", "해백합(sea lily)"),
                            ("성게", "성게(sea urchin)"),
                            ("불가사리", "불가사리(sea star)"),
                            ("산호", "산호(coral)"),
                            ("해면동물", "해면동물(sponge)"),
                            ("어류", "어류(fish)"),
                            ("공룡", "공룡(dinosaur)"),
                            ("포유류", "포유류(mammals)"),
                            ("식물", "식물(plant)"),
                            ("유공충", "유공충(foraminifera)"),
                            ("코노돈트", "코노돈트(conodont)"),
                            ("화분/포자", "화분/포자(spore/pollen)"),
                            ("생흔화석", "생흔화석(trace fossil)"),
                            ("기타", "기타"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="일반명",
                    ),
                ),
                (
                    "remarks",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=500,
                        null=True,
                        verbose_name="비고",
                    ),
                ),
                (
                    "short_title",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="색인"
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=20)),
                ("modified_on", models.DateTimeField(auto_now=True, null=True)),
                ("modified_by", models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Taxon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "rank",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("11", "Subspecies"),
                            ("12", "Species"),
                            ("13", "Superspecies"),
                            ("21", "Subgenus"),
                            ("22", "Genus"),
                            ("23", "Supergenus"),
                            ("31", "Subfamily"),
                            ("32", "Family"),
                            ("33", "Superfamily"),
                            ("41", "Suborder"),
                            ("42", "Order"),
                            ("43", "Superorder"),
                            ("51", "Subclass"),
                            ("52", "Class"),
                            ("53", "Superclass"),
                            ("61", "Subphylum"),
                            ("62", "Phylum"),
                            ("63", "Superphylum"),
                            ("71", "Subkingdom"),
                            ("72", "Kingdom"),
                            ("73", "Superkingdom"),
                            ("UR", "Unranked"),
                        ],
                        max_length=20,
                    ),
                ),
                ("authorship", models.CharField(blank=True, max_length=200, null=True)),
                ("author", models.CharField(blank=True, max_length=200, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                ("sensu", models.CharField(blank=True, max_length=200, null=True)),
                ("remarks", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxology.taxon",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaxonRank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rankcode", models.CharField(max_length=10)),
                ("rankname", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="TaxonAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author_order", models.IntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxology.author",
                    ),
                ),
                (
                    "taxon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="taxology.taxon"
                    ),
                ),
            ],
            options={"ordering": ["author_order"],},
        ),
        migrations.CreateModel(
            name="ReferenceAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author_order", models.IntegerField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxology.author",
                    ),
                ),
                (
                    "reference",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="taxology.reference",
                    ),
                ),
            ],
            options={"ordering": ["author_order"],},
        ),
        migrations.AddField(
            model_name="reference",
            name="author",
            field=models.ManyToManyField(
                through="taxology.ReferenceAuthor",
                to="taxology.author",
                verbose_name="저자",
            ),
        ),
        migrations.AddField(
            model_name="reference",
            name="journal",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="taxology.journal",
                verbose_name="저널",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalReference",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "title_e",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="영문제목"
                    ),
                ),
                (
                    "title_k",
                    models.CharField(
                        blank=True, max_length=1000, null=True, verbose_name="한글제목"
                    ),
                ),
                (
                    "year",
                    models.CharField(
                        blank=True, max_length=4, null=True, verbose_name="발표년도"
                    ),
                ),
                (
                    "publish_date",
                    models.DateField(blank=True, null=True, verbose_name="출간연월일"),
                ),
                (
                    "volume",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="권"
                    ),
                ),
                (
                    "issue",
                    models.CharField(
                        blank=True, max_length=5, null=True, verbose_name="호수"
                    ),
                ),
                (
                    "pages",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="페이지"
                    ),
                ),
                (
                    "journal_title",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="저널제목"
                    ),
                ),
                (
                    "author_list",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="저자"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BK", "Book"),
                            ("JN", "Journal Article"),
                            ("RP", "Report"),
                            ("TH", "Thesis"),
                        ],
                        default="JN",
                        max_length=2,
                        verbose_name="문헌종류",
                    ),
                ),
                (
                    "type2",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("TX", "분류학(표본번호 있음)"),
                            ("T2", "분류학(표본번호 없음)"),
                            ("RV", "비분류학"),
                            ("OS", "해외화석"),
                        ],
                        default="TX",
                        max_length=2,
                        verbose_name="문헌종류",
                    ),
                ),
                (
                    "data",
                    models.TextField(blank=True, max_length=255, verbose_name="파일"),
                ),
                (
                    "abstract",
                    models.TextField(blank=True, null=True, verbose_name="초록"),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("EN", "English"), ("KO", "Korean")],
                        default="EN",
                        max_length=2,
                        verbose_name="언어",
                    ),
                ),
                (
                    "doi",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="DOI"
                    ),
                ),
                (
                    "fossilgroup",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="화석종류"
                    ),
                ),
                (
                    "fossilgroup_choice",
                    models.CharField(
                        blank=True,
                        choices=[("MA", "거화석"), ("MI", "미화석"), ("IC", "생흔화석")],
                        max_length=20,
                        null=True,
                        verbose_name="화석종류",
                    ),
                ),
                (
                    "fossilgroup_macro",
                    models.BooleanField(default=False, verbose_name="거화석"),
                ),
                (
                    "fossilgroup_micro",
                    models.BooleanField(default=False, verbose_name="미화석"),
                ),
                (
                    "fossilgroup_ichno",
                    models.BooleanField(default=False, verbose_name="생흔화석"),
                ),
                (
                    "commonname",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="일반명"
                    ),
                ),
                (
                    "commonname_choice",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("삼엽충", "삼엽충(trilobite)"),
                            ("곤충", "곤충(insect)"),
                            ("개형충", "개형충(ostracod)"),
                            ("이매패류", "이매패류(bivalve)"),
                            ("복족류", "복족류(gastropod)"),
                            ("두족류", "두족류(cephalopod)"),
                            ("완족동물", "완족동물(brachiopod)"),
                            ("해백합", "해백합(sea lily)"),
                            ("성게", "성게(sea urchin)"),
                            ("불가사리", "불가사리(sea star)"),
                            ("산호", "산호(coral)"),
                            ("해면동물", "해면동물(sponge)"),
                            ("어류", "어류(fish)"),
                            ("공룡", "공룡(dinosaur)"),
                            ("포유류", "포유류(mammals)"),
                            ("식물", "식물(plant)"),
                            ("유공충", "유공충(foraminifera)"),
                            ("코노돈트", "코노돈트(conodont)"),
                            ("화분/포자", "화분/포자(spore/pollen)"),
                            ("생흔화석", "생흔화석(trace fossil)"),
                            ("기타", "기타"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="일반명",
                    ),
                ),
                (
                    "remarks",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=500,
                        null=True,
                        verbose_name="비고",
                    ),
                ),
                (
                    "short_title",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="색인"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_by", models.CharField(blank=True, max_length=20)),
                (
                    "modified_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("modified_by", models.CharField(blank=True, max_length=20)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "journal",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="taxology.journal",
                        verbose_name="저널",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical reference",
                "verbose_name_plural": "historical references",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalJournal",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("title_k", models.CharField(blank=True, max_length=500, null=True)),
                ("title_e", models.CharField(blank=True, max_length=500, null=True)),
                ("publisher", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "since",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="started year"
                    ),
                ),
                ("issn", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "created_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_by", models.CharField(blank=True, max_length=20)),
                (
                    "modified_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("modified_by", models.CharField(blank=True, max_length=20)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical journal",
                "verbose_name_plural": "historical journals",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAuthor",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "firstname_k",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="이름",
                    ),
                ),
                (
                    "lastname_k",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="성",
                    ),
                ),
                (
                    "firstname_e",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Firstname",
                    ),
                ),
                (
                    "lastname_e",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Lastname",
                    ),
                ),
                (
                    "affiliation",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="소속"
                    ),
                ),
                (
                    "abbreviation_e",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "abbreviation_k",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("is_primary", models.BooleanField(default=True)),
                (
                    "remarks",
                    models.CharField(
                        blank=True, max_length=500, null=True, verbose_name="비고"
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("created_by", models.CharField(blank=True, max_length=20)),
                (
                    "modified_on",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("modified_by", models.CharField(blank=True, max_length=20)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "redirect_to",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="taxology.author",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical author",
                "verbose_name_plural": "historical authors",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
